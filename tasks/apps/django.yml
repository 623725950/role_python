# prepare_installation
- name: Create python_applications dir on venv
  file:
    path: "{{python_venv_path}}/{{python_applications}}"
    state: directory
  
- name: Upgrade pip3 on venv
  shell: |
    python3 -m venv --system-site-packages "{{python_venv_path}}/{{python_applications}}"
    "{{python_venv_path}}/{{python_applications}}"/bin/python3 -m pip install --upgrade pip

- block:
  - name: Install gcc on Redhat
    yum:
      name: gcc

  - name: Download latest sqlite3
    unarchive:
        src: "{{python_applications_django.sqlite3_down_url}}"
        dest: /opt
        remote_src: yes
      
  - name: Upgrade sqlite3
    shell: |
      cd /opt/sqlite-*
      ./configure --prefix=/opt
      make && make install 

  - name: Create link for sqlite3
    file:
      src: '{{item.src}}'
      dest: '{{item.dest}}'
      state: link
      force: yes
    with_items:
      - {src: /opt/bin/sqlite3,dest: /usr/bin/sqlite3}
      - {src: /opt/lib/libsqlite3.so.0.8.6,dest: /usr/lib64/libsqlite3.so.0.8.6}
  when: ansible_os_family == "RedHat"
    
## install apps
- name: Install Django and uwsgi
  pip: 
    name: "{{item}}"
    virtualenv: "{{python_venv_path}}/{{python_applications}}"
    virtualenv_command: python3 -m venv --system-site-packages "{{python_venv_path}}/{{python_applications}}"
  with_items:
    - django
    - uwsgi
    
- name: copy python_env.sh
  template:
    src: python_env.sh 
    dest: /etc/profile.d

- name: Create Demo Project
  shell: |
    rm -rf django_project
    ./bin/django-admin startproject django_project
  args:
    chdir: "{{python_venv_path}}/{{python_applications}}"

## configure
- name: Create link for django
  file: 
    src: '{{python_venv_path}}/{{python_applications}}/'
    dest: '/data/wwwroot/{{python_applications}}'
    state: link
    force: yes
      
- name: Configure uwsgi
  template:
    src: '{{item.src}}'
    dest: '{{item.dest}}'
    force: yes
  with_items:
    - {src: django.ini,dest: /data/apps/django/django.ini}
    - {src: django_app.service,dest: /lib/systemd/system/django.service}

- name: Open Internet access
  lineinfile:
      dest: "{{python_venv_path}}/{{python_applications}}/django_project/django_project/settings.py"
      regexp: "^ALLOWED_HOSTS .*"
      line: "ALLOWED_HOSTS = ['*']"
      backrefs: yes  

- name: Restart django and Nginx
  service: 
    name: "{{item}}"
    state: restarted
    enabled: yes
  with_items:
    - django
    - nginx

# check 
- name: Check django version
  shell: sudo echo "django version:" $({{python_venv_path}}/{{python_applications}}/django-admin  version) |sudo tee -a /data/logs/install_version.txt

- name: Check django Service
  shell: systemctl status django | grep Active*
  register: check_django_service
  notify: check_django_service